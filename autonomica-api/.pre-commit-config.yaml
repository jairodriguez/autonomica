repos:
  # Pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: name-tests-test
      - id: requirements-txt-fixer

  # Black code formatter
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # isort import sorter
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Flake8 linter
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  # MyPy type checker
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-redis
          - types-python-dateutil
        args: [--ignore-missing-imports]

  # Bandit security linter
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        exclude: tests/,venv/,.venv/,env/,.env/

  # Safety vulnerability checker
  - repo: https://github.com/PyCQA/safety
    rev: 2.3.5
    hooks:
      - id: safety
        args: [--output, json, --save, safety-report.json]

  # Pytest runner
  - repo: https://github.com/pre-commit/mirrors-pytest
    rev: v7.4.3
    hooks:
      - id: pytest
        args: [--tb=short, -v]
        always_run: false
        stages: [manual]

  # Coverage checker
  - repo: https://github.com/pre-commit/mirrors-coverage
    rev: v7.3.2
    hooks:
      - id: coverage
        args: [run, --source=app, --omit=*/tests/*,*/venv/*,*/env/*]
        always_run: false
        stages: [manual]

  # Radon complexity checker
  - repo: https://github.com/rubik/radon
    rev: v6.0.1
    hooks:
      - id: radon-cc
        args: [--min, A]
        always_run: false
        stages: [manual]

  # Xenon complexity checker
  - repo: https://github.com/rubik/xenon
    rev: v0.8.0
    hooks:
      - id: xenon
        args: [--max-absolute-complexity=10, --max-average-complexity=5]
        always_run: false
        stages: [manual]

  # Commit message linter
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Conventional commit checker
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen-branch
        stages: [push]

  # Dockerfile linter
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML linter
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [--strict]

  # TOML linter
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        types: [toml]
        language_version: python3

  # Markdown linter
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Shell script linter
  - repo: https://github.com/koalaman/shellcheck
    rev: v0.9.0
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Terraform linter (if using Terraform)
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.88.0
    hooks:
      - id: terraform_fmt
      - id: terraform_docs
      - id: terraform_tflint
      - id: terraform_validate

  # SQL linter
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        files: \.sql$
        args: [--max-line-length=120]

  # JSON linter
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-json
        files: \.json$

  # XML linter
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-xml
        files: \.xml$

  # HTML linter
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-html
        files: \.html$

  # CSS linter
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-css
        files: \.css$

  # JavaScript/TypeScript linter (for frontend integration)
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.56.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        types: [file]
        additional_dependencies:
          - eslint@8.56.0
          - "@typescript-eslint/eslint-plugin@6.17.0"
          - "@typescript-eslint/parser@6.17.0"
          - "eslint-config-next@15.3.3"

  # Prettier formatter (for frontend integration)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.1
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, css, scss, html, markdown]
        additional_dependencies:
          - prettier@3.1.1