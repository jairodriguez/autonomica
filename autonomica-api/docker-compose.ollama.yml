version: '3.8'

services:
  ollama:
    image: ollama/ollama:latest
    container_name: autonomica-ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      # Model storage - persists across container restarts
      - ollama_models:/root/.ollama
      # Optional: Mount custom model configurations
      - ./ollama-config:/etc/ollama
      # Optional: Mount host models directory for faster access
      - ./models:/models:ro
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
      # Optional: Set custom model path
      - OLLAMA_MODELS=/models
    deploy:
      resources:
        limits:
          # Adjust based on your system capabilities
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - autonomica-network
    labels:
      - "com.autonomica.service=ollama"
      - "com.autonomica.type=ai-model"
      - "com.autonomica.version=latest"

  # Optional: Redis for Ollama model caching and session management
  ollama-redis:
    image: redis:7-alpine
    container_name: autonomica-ollama-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - ollama_redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autonomica-network
    labels:
      - "com.autonomica.service=ollama-redis"
      - "com.autonomica.type=cache"

  # Optional: Monitoring stack for Ollama
  ollama-monitoring:
    image: grafana/grafana:latest
    container_name: autonomica-ollama-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ollama_grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=autonomica2024
      - GF_USERS_ALLOW_SIGN_UP=false
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autonomica-network
    labels:
      - "com.autonomica.service=ollama-monitoring"
      - "com.autonomica.type=monitoring"

  # Optional: Prometheus for metrics collection
  ollama-prometheus:
    image: prom/prometheus:latest
    container_name: autonomica-ollama-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ollama_prometheus_data:/prometheus
      - ./monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - autonomica-network
    labels:
      - "com.autonomica.service=ollama-prometheus"
      - "com.autonomica.type=monitoring"

volumes:
  ollama_models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/ollama-models
  ollama_redis_data:
    driver: local
  ollama_grafana_data:
    driver: local
  ollama_prometheus_data:
    driver: local

networks:
  autonomica-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
