# Monitoring and Alerting Configuration
# This file configures the monitoring system for the Autonomica project

version: '1.0'
project: 'autonomica'
environment: 'production'

# Monitoring Services Configuration
services:
  # Application Performance Monitoring (APM)
  apm:
    provider: 'sentry'
    enabled: true
    config:
      dsn: '${SENTRY_DSN}'
      environment: '${ENVIRONMENT}'
      traces_sample_rate: 0.1
      profiles_sample_rate: 0.1
      debug: false

  # Infrastructure Monitoring
  infrastructure:
    provider: 'newrelic'
    enabled: true
    config:
      license_key: '${NEW_RELIC_LICENSE_KEY}'
      app_name: 'autonomica'
      log_level: 'info'
      distributed_tracing:
        enabled: true
        exclude_newrelic_header: false

  # Log Aggregation
  logging:
    provider: 'datadog'
    enabled: true
    config:
      api_key: '${DATADOG_API_KEY}'
      app_key: '${DATADOG_APP_KEY}'
      site: 'datadoghq.com'
      log_collection:
        enabled: true
        container_collect_all: true

  # Metrics Collection
  metrics:
    provider: 'prometheus'
    enabled: true
    config:
      port: 9090
      scrape_interval: '15s'
      evaluation_interval: '15s'
      global:
        scrape_interval: '15s'
        evaluation_interval: '15s'

# Monitoring Targets
targets:
  # Frontend Application
  frontend:
    url: 'https://autonomica.app'
    health_check: '/api/health'
    metrics:
      - response_time
      - error_rate
      - throughput
      - user_experience
      - core_web_vitals

  # Backend API
  backend:
    url: 'https://api.autonomica.app'
    health_check: '/health'
    metrics:
      - response_time
      - error_rate
      - throughput
      - database_performance
      - external_api_calls

  # Worker Service
  worker:
    url: 'https://worker.autonomica.app'
    health_check: '/health'
    metrics:
      - queue_length
      - processing_time
      - error_rate
      - throughput
      - resource_usage

  # Database
  database:
    type: 'postgresql'
    connection_string: '${DATABASE_URL}'
    metrics:
      - connection_count
      - query_performance
      - lock_wait_time
      - buffer_hit_ratio
      - transaction_rate

  # Redis Cache
  redis:
    connection_string: '${REDIS_URL}'
    metrics:
      - memory_usage
      - hit_rate
      - connection_count
      - command_rate
      - key_expiration

# Alerting Rules
alerts:
  # Critical Alerts (Immediate Response Required)
  critical:
    - name: 'service_down'
      condition: 'service_health == "down"'
      severity: 'critical'
      notification:
        - slack: '#alerts-critical'
        - email: 'oncall@autonomica.app'
        - pagerduty: 'P1'

    - name: 'high_error_rate'
      condition: 'error_rate > 5%'
      severity: 'critical'
      notification:
        - slack: '#alerts-critical'
        - email: 'oncall@autonomica.app'
        - pagerduty: 'P1'

    - name: 'database_connection_failure'
      condition: 'database_connections_failed > 10'
      severity: 'critical'
      notification:
        - slack: '#alerts-critical'
        - email: 'oncall@autonomica.app'
        - pagerduty: 'P1'

  # High Priority Alerts (Response within 30 minutes)
  high:
    - name: 'performance_degradation'
      condition: 'response_time > 2s'
      severity: 'high'
      notification:
        - slack: '#alerts-high'
        - email: 'devops@autonomica.app'

    - name: 'high_memory_usage'
      condition: 'memory_usage > 80%'
      severity: 'high'
      notification:
        - slack: '#alerts-high'
        - email: 'devops@autonomica.app'

    - name: 'queue_backlog'
      condition: 'queue_length > 1000'
      severity: 'high'
      notification:
        - slack: '#alerts-high'
        - email: 'devops@autonomica.app'

  # Medium Priority Alerts (Response within 2 hours)
  medium:
    - name: 'increased_error_rate'
      condition: 'error_rate > 1%'
      severity: 'medium'
      notification:
        - slack: '#alerts-medium'
        - email: 'devops@autonomica.app'

    - name: 'slow_queries'
      condition: 'query_time > 1s'
      severity: 'medium'
      notification:
        - slack: '#alerts-medium'
        - email: 'devops@autonomica.app'

    - name: 'low_cache_hit_rate'
      condition: 'cache_hit_rate < 80%'
      severity: 'medium'
      notification:
        - slack: '#alerts-medium'
        - email: 'devops@autonomica.app'

  # Low Priority Alerts (Response within 24 hours)
  low:
    - name: 'disk_space_warning'
      condition: 'disk_usage > 70%'
      severity: 'low'
      notification:
        - slack: '#alerts-low'
        - email: 'devops@autonomica.app'

    - name: 'certificate_expiry_warning'
      condition: 'ssl_cert_expiry < 30 days'
      severity: 'low'
      notification:
        - slack: '#alerts-low'
        - email: 'devops@autonomica.app'

# Dashboard Configuration
dashboards:
  # Overview Dashboard
  overview:
    title: 'Autonomica Overview'
    description: 'High-level system overview and key metrics'
    panels:
      - title: 'System Health'
        type: 'status'
        metrics: ['frontend_health', 'backend_health', 'worker_health']
        refresh: '30s'

      - title: 'Response Times'
        type: 'line'
        metrics: ['frontend_response_time', 'backend_response_time']
        refresh: '1m'

      - title: 'Error Rates'
        type: 'line'
        metrics: ['frontend_error_rate', 'backend_error_rate', 'worker_error_rate']
        refresh: '1m'

      - title: 'Throughput'
        type: 'line'
        metrics: ['frontend_throughput', 'backend_throughput', 'worker_throughput']
        refresh: '1m'

  # Performance Dashboard
  performance:
    title: 'Performance Metrics'
    description: 'Detailed performance analysis and optimization insights'
    panels:
      - title: 'API Performance'
        type: 'line'
        metrics: ['api_response_time_p95', 'api_response_time_p99']
        refresh: '1m'

      - title: 'Database Performance'
        type: 'line'
        metrics: ['db_query_time', 'db_connection_count', 'db_lock_wait_time']
        refresh: '1m'

      - title: 'Cache Performance'
        type: 'line'
        metrics: ['redis_hit_rate', 'redis_memory_usage', 'redis_connection_count']
        refresh: '1m'

      - title: 'Resource Usage'
        type: 'line'
        metrics: ['cpu_usage', 'memory_usage', 'disk_usage']
        refresh: '1m'

  # Business Metrics Dashboard
  business:
    title: 'Business Metrics'
    description: 'Key business indicators and user experience metrics'
    panels:
      - title: 'User Experience'
        type: 'line'
        metrics: ['core_web_vitals_lcp', 'core_web_vitals_fid', 'core_web_vitals_cls']
        refresh: '5m'

      - title: 'Feature Usage'
        type: 'bar'
        metrics: ['feature_agent_management', 'feature_project_management', 'feature_analytics']
        refresh: '15m'

      - title: 'User Engagement'
        type: 'line'
        metrics: ['daily_active_users', 'session_duration', 'bounce_rate']
        refresh: '1h'

# Notification Channels
notifications:
  # Slack Channels
  slack:
    - name: 'alerts-critical'
      webhook_url: '${SLACK_WEBHOOK_CRITICAL}'
      channel: '#alerts-critical'
      mentions: '@here'

    - name: 'alerts-high'
      webhook_url: '${SLACK_WEBHOOK_HIGH}'
      channel: '#alerts-high'
      mentions: '@channel'

    - name: 'alerts-medium'
      webhook_url: '${SLACK_WEBHOOK_MEDIUM}'
      channel: '#alerts-medium'

    - name: 'alerts-low'
      webhook_url: '${SLACK_WEBHOOK_LOW}'
      channel: '#alerts-low'

  # Email Notifications
  email:
    - name: 'oncall'
      address: 'oncall@autonomica.app'
      template: 'critical_alert'
      frequency: 'immediate'

    - name: 'devops'
      address: 'devops@autonomica.app'
      template: 'technical_alert'
      frequency: 'immediate'

    - name: 'stakeholders'
      address: 'stakeholders@autonomica.app'
      template: 'business_alert'
      frequency: 'daily'

  # PagerDuty Integration
  pagerduty:
    - name: 'critical'
      service_key: '${PAGERDUTY_CRITICAL_KEY}'
      escalation_policy: 'P1'
      urgency: 'high'

    - name: 'high'
      service_key: '${PAGERDUTY_HIGH_KEY}'
      escalation_policy: 'P2'
      urgency: 'high'

# Retention and Storage
retention:
  # Metrics Retention
  metrics:
    raw: '30d'
    hourly: '90d'
    daily: '1y'
    monthly: '5y'

  # Logs Retention
  logs:
    application: '30d'
    access: '90d'
    error: '1y'
    audit: '5y'

  # Traces Retention
  traces:
    sampled: '7d'
    error: '30d'

# Maintenance Windows
maintenance:
  - name: 'weekly_maintenance'
    schedule: 'every Sunday at 2:00 AM UTC'
    duration: '2h'
    services: ['all']
    alerts: 'suppressed'

  - name: 'monthly_maintenance'
    schedule: 'first Sunday of every month at 2:00 AM UTC'
    duration: '4h'
    services: ['all']
    alerts: 'suppressed'

# Custom Metrics
custom_metrics:
  - name: 'user_satisfaction_score'
    type: 'gauge'
    description: 'User satisfaction score from feedback'
    labels: ['service', 'feature', 'user_type']

  - name: 'business_value_delivered'
    type: 'counter'
    description: 'Total business value delivered'
    labels: ['service', 'feature', 'value_type']

  - name: 'cost_per_request'
    type: 'gauge'
    description: 'Cost per API request'
    labels: ['service', 'endpoint', 'user_tier']
