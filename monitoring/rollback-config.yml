# Automated Rollback Configuration for Autonomica
# This file configures the automated rollback system for detecting and resolving deployment issues

version: '1.0'
project: 'autonomica'
environment: 'production'

# Rollback Triggers
triggers:
  # Health Check Failures
  health_check:
    enabled: true
    thresholds:
      consecutive_failures: 3
      failure_window: '2m'
      recovery_threshold: 2
      recovery_window: '5m'
    
    endpoints:
      - name: 'frontend'
        url: 'https://autonomica.app/api/health'
        timeout: '5s'
        expected_status: 200
        critical: true
        
      - name: 'backend'
        url: 'https://api.autonomica.app/health'
        timeout: '5s'
        expected_status: 200
        critical: true
        
      - name: 'worker'
        url: 'https://worker.autonomica.app/health'
        timeout: '5s'
        expected_status: 200
        critical: false

  # Performance Degradation
  performance:
    enabled: true
    thresholds:
      response_time_p95: '2s'
      response_time_p99: '5s'
      error_rate: '0.05'  # 5%
      throughput_drop: '0.3'  # 30% drop
      
    evaluation_window: '5m'
    consecutive_violations: 2
    recovery_threshold: '1m'

  # Business Metrics
  business_metrics:
    enabled: true
    thresholds:
      user_satisfaction_drop: '0.2'  # 20% drop
      conversion_rate_drop: '0.15'   # 15% drop
      error_rate_increase: '0.1'     # 10% increase
      
    baseline_period: '1h'
    evaluation_period: '15m'
    consecutive_violations: 3

  # Infrastructure Issues
  infrastructure:
    enabled: true
    thresholds:
      cpu_usage: '0.9'      # 90%
      memory_usage: '0.85'  # 85%
      disk_usage: '0.8'     # 80%
      database_connections: '0.8'  # 80% of max
      
    evaluation_window: '3m'
    consecutive_violations: 2

  # Security Issues
  security:
    enabled: true
    triggers:
      - high_severity_vulnerability: true
      - authentication_failure_rate: '0.1'  # 10%
      - suspicious_activity: true
      - data_breach_indicator: true
      
    immediate_rollback: true
    security_team_notification: true

# Rollback Strategies
strategies:
  # Immediate Rollback (Critical Issues)
  immediate:
    triggers:
      - 'health_check.critical_failure'
      - 'security.breach'
      - 'infrastructure.critical'
      
    actions:
      - action: 'rollback_all_services'
        priority: 'highest'
        timeout: '30s'
        
      - action: 'notify_security_team'
        priority: 'highest'
        channels: ['pagerduty', 'slack', 'email']
        
      - action: 'freeze_deployments'
        priority: 'high'
        duration: '1h'

  # Fast Rollback (Performance Issues)
  fast:
    triggers:
      - 'performance.degradation'
      - 'health_check.non_critical_failure'
      
    actions:
      - action: 'rollback_affected_service'
        priority: 'high'
        timeout: '2m'
        
      - action: 'notify_devops_team'
        priority: 'high'
        channels: ['slack', 'email']
        
      - action: 'investigate_root_cause'
        priority: 'medium'
        timeout: '15m'

  # Gradual Rollback (Business Metrics)
  gradual:
    triggers:
      - 'business_metrics.degradation'
      - 'performance.moderate_degradation'
      
    actions:
      - action: 'reduce_traffic_to_new_version'
        priority: 'medium'
        reduction: '0.5'  # 50%
        
      - action: 'monitor_metrics'
        priority: 'medium'
        duration: '10m'
        
      - action: 'rollback_if_no_improvement'
        priority: 'medium'
        timeout: '10m'

  # Canary Rollback (A/B Testing)
  canary:
    triggers:
      - 'canary.metrics_deterioration'
      - 'user_feedback.negative'
      
    actions:
      - action: 'stop_canary_deployment'
        priority: 'medium'
        timeout: '1m'
        
      - action: 'route_traffic_to_stable'
        priority: 'medium'
        timeout: '2m'
        
      - action: 'analyze_canary_data'
        priority: 'low'
        timeout: '30m'

# Rollback Actions
actions:
  # Service Rollback
  rollback_service:
    frontend:
      provider: 'vercel'
      command: 'vercel rollback'
      timeout: '2m'
      verification:
        - check_health: 'https://autonomica.app/api/health'
        - check_performance: 'response_time < 1s'
        
    backend:
      provider: 'railway'
      command: 'railway rollback --service backend'
      timeout: '3m'
      verification:
        - check_health: 'https://api.autonomica.app/health'
        - check_database: 'connection_count < 80%'
        
    worker:
      provider: 'railway'
      command: 'railway rollback --service worker'
      timeout: '3m'
      verification:
        - check_health: 'https://worker.autonomica.app/health'
        - check_queue: 'queue_length < 1000'

  # Traffic Management
  traffic_management:
    load_balancer:
      provider: 'cloudflare'
      method: 'weighted_routing'
      stable_version_weight: 1.0
      new_version_weight: 0.0
      
    cdn:
      provider: 'vercel'
      method: 'cache_invalidation'
      paths: ['/*']
      
    database:
      provider: 'railway'
      method: 'connection_pooling'
      max_connections: '80%'

  # Configuration Rollback
  config_rollback:
    environment_variables:
      method: 'git_revert'
      branch: 'main'
      timeout: '5m'
      
    feature_flags:
      method: 'disable_all'
      timeout: '1m'
      
    database_migrations:
      method: 'rollback_migration'
      timeout: '10m'
      safety_check: true

# Rollback Verification
verification:
  # Health Checks
  health_checks:
    enabled: true
    interval: '30s'
    timeout: '10s'
    max_attempts: 3
    
    criteria:
      - service_health: 'all_services_healthy'
      - response_time: 'p95 < 2s'
      - error_rate: '< 1%'
      - throughput: '> 80% of baseline'

  # Performance Validation
  performance_validation:
    enabled: true
    duration: '5m'
    metrics:
      - response_time_p95
      - response_time_p99
      - error_rate
      - throughput
      - resource_usage
      
    thresholds:
      response_time_improvement: '> 20%'
      error_rate_reduction: '> 50%'
      throughput_recovery: '> 90%'

  # Business Metrics Validation
  business_metrics_validation:
    enabled: true
    duration: '15m'
    metrics:
      - user_satisfaction
      - conversion_rate
      - error_rate
      - user_engagement
      
    thresholds:
      satisfaction_recovery: '> 90% of baseline'
      conversion_recovery: '> 95% of baseline'
      error_rate_recovery: '< 50% of previous'

# Notification and Escalation
notifications:
  # Rollback Initiated
  rollback_initiated:
    channels:
      - slack: '#alerts-critical'
      - email: 'oncall@autonomica.app'
      - pagerduty: 'P1'
      
    message_template: |
      🚨 AUTOMATED ROLLBACK INITIATED
      
      **Service**: {{ service }}
      **Trigger**: {{ trigger }}
      **Severity**: {{ severity }}
      **Time**: {{ timestamp }}
      
      **Actions Taken**:
      {{ actions }}
      
      **Next Steps**:
      1. Monitor rollback progress
      2. Verify service health
      3. Investigate root cause
      4. Plan remediation

  # Rollback Completed
  rollback_completed:
    channels:
      - slack: '#alerts-high'
      - email: 'devops@autonomica.app'
      
    message_template: |
      ✅ ROLLBACK COMPLETED SUCCESSFULLY
      
      **Service**: {{ service }}
      **Duration**: {{ duration }}
      **Status**: {{ status }}
      
      **Verification Results**:
      {{ verification_results }}
      
      **Next Steps**:
      1. Monitor service stability
      2. Investigate root cause
      3. Plan next deployment
      4. Update runbooks

  # Rollback Failed
  rollback_failed:
    channels:
      - slack: '#alerts-critical'
      - email: 'oncall@autonomica.app'
      - pagerduty: 'P1'
      
    message_template: |
      ❌ ROLLBACK FAILED
      
      **Service**: {{ service }}
      **Error**: {{ error }}
      **Duration**: {{ duration }}
      
      **Immediate Actions Required**:
      1. Manual intervention needed
      2. Check service status
      3. Verify infrastructure
      4. Contact on-call engineer

# Escalation Policies
escalation:
  # Immediate Escalation
  immediate:
    triggers:
      - 'rollback_failed'
      - 'security_breach'
      - 'critical_service_down'
      
    actions:
      - notify_oncall: 'immediate'
      - notify_management: 'within_5m'
      - create_incident: 'immediate'
      - freeze_all_deployments: 'immediate'

  # Delayed Escalation
  delayed:
    triggers:
      - 'rollback_slow'
      - 'performance_issues_persist'
      - 'business_impact_high'
      
    actions:
      - notify_devops: 'within_15m'
      - notify_product: 'within_30m'
      - schedule_post_mortem: 'within_24h'

# Post-Rollback Actions
post_rollback:
  # Investigation
  investigation:
    enabled: true
    duration: '2h'
    team: 'devops'
    
    tasks:
      - analyze_logs
      - review_metrics
      - check_configuration
      - identify_root_cause
      - document_findings

  # Remediation
  remediation:
    enabled: true
    priority: 'high'
    timeline: '24h'
    
    tasks:
      - fix_root_cause
      - update_monitoring
      - improve_rollback_process
      - update_runbooks
      - team_training

  # Documentation
  documentation:
    enabled: true
    required: true
    
    artifacts:
      - incident_report
      - root_cause_analysis
      - action_items
      - lessons_learned
      - process_improvements

# Rollback History and Analytics
analytics:
  # Metrics Tracking
  metrics:
    - rollback_frequency
    - rollback_duration
    - rollback_success_rate
    - time_to_detection
    - time_to_resolution
    
  # Performance Analysis
  performance:
    - trigger_effectiveness
    - action_efficiency
    - verification_accuracy
    - notification_delivery
    
  # Continuous Improvement
  improvement:
    - trigger_optimization
    - action_refinement
    - threshold_adjustment
    - process_automation
